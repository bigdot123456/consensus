v0.3.0 - 2018/4/22
重塑架构，python-3.6.5
blockchain.py - 区块链
masternode.py - 主节点
listnode.py   - 列表主节点
matrix.py     - 选举以及主链运行
example.py    - 举例
分割32各区域后选举
增加挖矿功能
增加算力证明以及验证模块
模拟运行主链接
from election.matrix import Matrix
Matrix().run()
---------------------------------------------
v0.2 - 2018/04/13
主节点属性增加txid，删除公钥
小组成员邀请增加逻辑距离限制
胜者uptime由清零改为减半
区块高度变化改为随时间自动运行
----------------------------------------------
v0.1 - 2018/04/07

安装 python setup.py install
masternode.py - 主节点
election.py   - 选举流程
example.py    - 举例

1.全网同步主节点列表，包含主节点IP，公钥，算力，上线时间等信息         ##类似达世币，该方案可行
2.各主节点自主组成小组，此处为节点根据与其余节点的网络连接状况自主向其余节点发出邀请
3.小组信息由各成员同意签名后向全网发布，各节点验证后更新列表               
4.根据区块哈希获得伪随机种子，根据主节点的上线时间×算力选举出胜者      ##类似达世币，该方案可行
5.更新父子节点等列表属性，胜者进入下一轮
6.重复2-5步，直到胜者数量小于21,选举结束，胜者uptime更新
##验证节点：验证节点定期可向各节点发出算力验证等请求(根据当前区块哈希的随机数计算等)，若不诚实告知全网                  ##类似于挖矿的算力验证算法尚待研究

运行主模块Election().run()可进行一整轮选举，最后返回顶层节点，根据Masternode.py中主节点各属性可以画出拓扑图以及知晓全网节点情况
也可运行多次run()进行多次选举，每次选举后胜者的uptime将更新，区块高度/哈希也将变化
